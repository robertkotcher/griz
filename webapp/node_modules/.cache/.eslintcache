[{"/Users/robertkotcher/griz-backend/webapp/src/index.js":"1","/Users/robertkotcher/griz-backend/webapp/src/reportWebVitals.js":"2","/Users/robertkotcher/griz-backend/webapp/src/App.js":"3"},{"size":535,"mtime":1689298233880,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1689298233881,"results":"6","hashOfConfig":"5"},{"size":2749,"mtime":1689355899322,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14oi75y",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/robertkotcher/griz-backend/webapp/src/index.js",[],[],"/Users/robertkotcher/griz-backend/webapp/src/reportWebVitals.js",[],[],"/Users/robertkotcher/griz-backend/webapp/src/App.js",["18","19"],[],"import './App.css';\nimport axios from  'axios';\nimport { useState } from \"react\";\n\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n  TypingIndicator\n} from \"@chatscope/chat-ui-kit-react\";\n\nconst QUERY_URL = \"/api/query\";\n\nconst Base64Image = ({ base64Data }) => {\n\tconst imageUrl = `data:image/png;base64,${base64Data}`;\n  \n\treturn <img src={imageUrl} alt=\"Chat plot\" />;\n  };\n\nfunction App() {\n\tconst [loading, setLoading] = useState(false);\n\tconst [messages, setMessages] = useState([]);\n\n\tconst handleSend = async (_, text) => {\n\t\tsetLoading(true);\n\n\t\tmessages.push({\n\t\t\ttext,\n\t\t\tisImage: false,\n\t\t\ttime: new Date(),\n\t\t\tsender: \"Robert\",\n\t\t\tdirection: \"outgoing\"\n\t\t});\n\n\t\ttry {\n\t\t\tconst encodedText = encodeURIComponent(text);\n\t\t\tconst url = `${QUERY_URL}?q=${encodedText}`;\n\n\t\t\t// Send the request using Axios or any other HTTP client library\n\t\t\tconst response = await axios.get(url);\n\n\t\t\tmessages.push({\n\t\t\t\ttext: response.data.data,\n\t\t\t\tisImage: response.data.is_image,\n\t\t\t\ttime: new Date(),\n\t\t\t\tsender: \"Griz\",\n\t\t\t\tdirection: \"incoming\"\n\t\t\t});\n\t\t\tsetMessages(messages);\n\n\t\t\tsetLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error sending the request:', error);\n\t\t}\n\t}\n\n  return (\n    <div className=\"App\">\n\t\t\t<h2>\n\t\t\t\tAsk a question about one of these tables:\n\t\t\t</h2>\n\t\t\t<ul>\n\t\t\t\t<li>bitcoin_blockchain blocks</li>\n\t\t\t\t<li>bitcoin_blockchain transactions</li>\n\t\t\t\t<li>austin_waste waste_and_diversion</li>\n\t\t\t\t<li>austin_bikeshare bikeshare_stations</li>\n\t\t\t\t<li>austin_bikeshare bikeshare_trips</li>\n\t\t\t\t<li>census_bureau_construction new_residential_construction</li>\n\t\t\t\t<li>census_opportunity_atlas tract_covariates</li>\n\t\t\t\t<li>chicago_crime crime</li>\n\t\t\t\t<li>covid19_aha hospital_beds</li>\n\t\t\t\t<li>covid19_aha staffing2</li>\n\t\t\t</ul>\n\t\t\t<MainContainer className=\"main-container\">\n\t\t\t\t<ChatContainer>\n\t\t\t\t\t<MessageList typingIndicator={loading ? <TypingIndicator content=\"Griz is typing\" /> : null}>\n\t\t\t\t\t\t{messages.map((m, idx) => {\n\t\t\t\t\t\t\tconsole.log(m);\n\t\t\t\t\t\t\tif (m.isImage) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Message.ImageContent\n\t\t\t\t\t\t\t\t\t\tsrc={`data:image/png;base64,${m.text}`}\n\t\t\t\t\t\t\t\t\t\talt=\"Requested chart\"\n\t\t\t\t\t\t\t\t\t\twidth={320}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tmodel={{\n\t\t\t\t\t\t\t\t\t\tmessage: m.text,\n\t\t\t\t\t\t\t\t\t\tdirection: m.direction,\n\t\t\t\t\t\t\t\t\t\tsentTime: `${m.time}`,\n\t\t\t\t\t\t\t\t\t\tsender: m.sender,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</MessageList>\n\t\t\t\t\t<MessageInput attachButton={false} onSend={handleSend} placeholder=\"Type prompt here\" />\n\t\t\t\t</ChatContainer>\n\t\t\t</MainContainer>\n\t\t</div>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","severity":1,"message":"21","line":5,"column":8,"nodeType":"22","messageId":"23","endLine":5,"endColumn":14},{"ruleId":"20","severity":1,"message":"24","line":17,"column":7,"nodeType":"22","messageId":"23","endLine":17,"endColumn":18},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'Base64Image' is assigned a value but never used."]